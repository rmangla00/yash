
package com.yash.TeaCoffeeVendingMachine;

import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class Container {

	private static int teaCapacity = 2000;
	private static int coffeeCapacity = 2000;
	private static int sugerCapacity = 8000;
	private static int waterCapacity = 15000;
	private static int milkCapacity = 10000;

	private static int wastedTea;
	private static int wastedcoffee;
	private static int wastedSuger;
	private static int wastedWater;
	private static int wastedMilk;
	
	public static Map<String, Integer> drinkWiseSale = new HashMap<String, Integer>();

	
	
	
	
	
	public void resetContainer() {
		Container.setTeaCapacity(2000);
		Container.setCoffeeCapacity(2000);
		Container.setSugerCapacity(8000);
		Container.setWaterCapacity(15000);
		Container.setMilkCapacity(10000);
	}

	public String containerStatus() {
		return "Container :\nTea Capacity=" + teaCapacity + "\nCoffee Capacity=" + coffeeCapacity + "\nSuger Capacity="
				+ sugerCapacity + "\nWater Capacity=" + waterCapacity + "\nMilk Capacity=" + milkCapacity;
	}

	public static void addSale(String drinkType, int quantity) {
		if (Container.drinkWiseSale.containsKey(drinkType)) {
			Container.drinkWiseSale.put(drinkType, Container.drinkWiseSale.get(drinkType) + quantity);
		} else {
			Container.drinkWiseSale.put(drinkType, quantity);
		}
	}

	public String totalDrinkWiseSale() {
		return "Drink Wise Sale " + drinkWiseSale;
	}

	public String totalDrinkSale() {
		Long totalDrinkOdered = drinkWiseSale.entrySet().stream().map(e -> e.getValue())
				.collect(Collectors.summarizingInt(n -> n)).getSum();
		return "Total Drink Orderd : " + totalDrinkOdered;
	}

}
